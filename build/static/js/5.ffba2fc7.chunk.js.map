{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","submitFormHandler","event","preventDefault","className","classes","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","HighlightedQuote","quote","text","author","QuoteDetail","match","useRouteMatch","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,kC,iHC2BXC,EAxBQ,SAACC,GACtB,IAAMC,EAAiBC,mBAEjBC,EAAoB,SAACC,GACzBA,EAAMC,kBAOR,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SAAUN,EAAzC,UACE,sBAAKG,UAAWC,IAAQG,QAASD,SAAUN,EAA3C,UACE,uBAAOQ,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKb,OAEvC,qBAAKK,UAAWC,IAAQQ,QAAxB,SACE,wBAAQT,UAAU,MAAlB,+BCIOU,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAASb,UAAWC,IAAQa,SAA5B,UACE,gDACEF,GACA,wBAAQZ,UAAU,MAAMe,QARC,WAC7BF,GAAmB,IAOf,2BAIDD,GAAmB,cAAC,EAAD,IACpB,gD,iBCVSI,EATU,SAACtB,GACxB,OACE,yBAAQM,UAAWC,IAAQgB,MAA3B,UACE,4BAAIvB,EAAMwB,OACV,qCAAaxB,EAAMyB,a,wBCuCVC,UArCK,WAClB,IAAMC,EAAQC,cAEPC,EADQC,cACRD,QAEP,EAAwDE,YAAQC,KAAgB,GAAzEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAmBC,EAA/C,EAA+CA,MAM/C,OAJAC,qBAAU,WACRL,EAAYJ,KACX,CAACI,EAAaJ,IAEF,YAAXK,EACK,qBAAK5B,UAAU,WAAf,SACL,cAACiC,EAAA,EAAD,MAGAF,EACK,mBAAG/B,UAAU,WAAb,SAAyB+B,IAG9BF,EAIF,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBX,KAAMW,EAAYX,KAAMC,OAAQU,EAAYV,SAC9D,cAAC,IAAD,CAAOe,KAAI,UAAKb,EAAMa,MAAQC,OAAK,EAAnC,SACA,qBAAKnC,UAAU,WAAf,SACE,cAAC,IAAD,CAAMoC,GAAE,UAAKf,EAAMgB,IAAX,aAA2BrC,UAAU,YAA7C,+BAGF,cAAC,IAAD,CAAOkC,KAAI,UAAKb,EAAMa,KAAX,aAAX,SACI,cAAC,EAAD,SAXG","file":"static/js/5.ffba2fc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment, useEffect } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const {quoteId} = params;\n\n  const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true)\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending'){\n    return <div className=\"centered\">\n      <LoadingSpinner/>\n    </div>\n  }\n  if (error){\n    return <p className=\"centered\">{error}</p>\n  }\n\n  if(!loadedQuote){\n      return <p>No quote found</p>\n  }\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\n      <Route path={`${match.path}`} exact>\n      <div className=\"centered\">\n        <Link to={`${match.url}/comments`} className=\"btn--flat\">Load Comments</Link>\n      </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n          <Comments/>\n      </Route>\n    </Fragment>\n  );\n};\nexport default QuoteDetail;\n"],"sourceRoot":""}